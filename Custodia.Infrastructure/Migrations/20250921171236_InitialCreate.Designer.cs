// <auto-generated />
using System;
using Custodia.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Custodia.Infrastructure.Migrations
{
    [DbContext(typeof(CustodiaDbContext))]
    [Migration("20250921171236_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Custodia.Domain.Entities.Anaquel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("VigenciaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VigenciaId");

                    b.ToTable("Anaqueles");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnaquelId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("AnaquelId");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DependenciaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("DependenciaId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Dependencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CajaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.ToTable("Dependencias");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Folio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoPdf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId", "Numero")
                        .IsUnique();

                    b.ToTable("Folios");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Trazabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<string>("Detalles")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FolioId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("FolioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Trazabilidades");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Vigencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Vigencias");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Anaquel", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Vigencia", "Vigencia")
                        .WithMany("Anaqueles")
                        .HasForeignKey("VigenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vigencia");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Caja", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Anaquel", "Anaquel")
                        .WithMany("Cajas")
                        .HasForeignKey("AnaquelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anaquel");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Dependencia", "Dependencia")
                        .WithMany("Contratos")
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dependencia");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Dependencia", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Caja", "Caja")
                        .WithMany("Dependencias")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Folio", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Contrato", "Contrato")
                        .WithMany("Folios")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Trazabilidad", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Contrato", "Contrato")
                        .WithMany("Trazas")
                        .HasForeignKey("ContratoId");

                    b.HasOne("Custodia.Domain.Entities.Folio", "Folio")
                        .WithMany("Trazas")
                        .HasForeignKey("FolioId");

                    b.HasOne("Custodia.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Trazas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Folio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Custodia.Domain.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Anaquel", b =>
                {
                    b.Navigation("Cajas");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Caja", b =>
                {
                    b.Navigation("Dependencias");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Contrato", b =>
                {
                    b.Navigation("Folios");

                    b.Navigation("Trazas");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Dependencia", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Folio", b =>
                {
                    b.Navigation("Trazas");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Trazas");
                });

            modelBuilder.Entity("Custodia.Domain.Entities.Vigencia", b =>
                {
                    b.Navigation("Anaqueles");
                });
#pragma warning restore 612, 618
        }
    }
}
